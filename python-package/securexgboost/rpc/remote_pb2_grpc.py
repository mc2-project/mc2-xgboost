# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import remote_pb2 as remote__pb2


class RemoteStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.rpc_get_remote_report_with_pubkey = channel.unary_unary(
        '/remote.Remote/rpc_get_remote_report_with_pubkey',
        request_serializer=remote__pb2.Status.SerializeToString,
        response_deserializer=remote__pb2.Report.FromString,
        )
    self.rpc_add_client_key = channel.unary_unary(
        '/remote.Remote/rpc_add_client_key',
        request_serializer=remote__pb2.DataMetadata.SerializeToString,
        response_deserializer=remote__pb2.StatusMsg.FromString,
        )
    self.rpc_add_client_key_with_certificate = channel.unary_unary(
        '/remote.Remote/rpc_add_client_key_with_certificate',
        request_serializer=remote__pb2.DataMetadata.SerializeToString,
        response_deserializer=remote__pb2.StatusMsg.FromString,
        )
    self.rpc_XGDMatrixCreateFromEncryptedFile = channel.unary_unary(
        '/remote.Remote/rpc_XGDMatrixCreateFromEncryptedFile',
        request_serializer=remote__pb2.DMatrixAttrs.SerializeToString,
        response_deserializer=remote__pb2.Name.FromString,
        )
    self.rpc_XGBoosterCreate = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterCreate',
        request_serializer=remote__pb2.BoosterAttrs.SerializeToString,
        response_deserializer=remote__pb2.Name.FromString,
        )
    self.rpc_XGBoosterSetParam = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterSetParam',
        request_serializer=remote__pb2.BoosterParam.SerializeToString,
        response_deserializer=remote__pb2.StatusMsg.FromString,
        )
    self.rpc_XGBoosterUpdateOneIter = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterUpdateOneIter',
        request_serializer=remote__pb2.BoosterUpdateParams.SerializeToString,
        response_deserializer=remote__pb2.StatusMsg.FromString,
        )
    self.rpc_XGBoosterPredict = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterPredict',
        request_serializer=remote__pb2.PredictParams.SerializeToString,
        response_deserializer=remote__pb2.Predictions.FromString,
        )
    self.rpc_XGBoosterSaveModel = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterSaveModel',
        request_serializer=remote__pb2.SaveModelParams.SerializeToString,
        response_deserializer=remote__pb2.StatusMsg.FromString,
        )
    self.rpc_XGBoosterLoadModel = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterLoadModel',
        request_serializer=remote__pb2.LoadModelParams.SerializeToString,
        response_deserializer=remote__pb2.StatusMsg.FromString,
        )
    self.rpc_XGBoosterDumpModelEx = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterDumpModelEx',
        request_serializer=remote__pb2.DumpModelParams.SerializeToString,
        response_deserializer=remote__pb2.Dump.FromString,
        )
    self.rpc_XGBoosterDumpModelExWithFeatures = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterDumpModelExWithFeatures',
        request_serializer=remote__pb2.DumpModelWithFeaturesParams.SerializeToString,
        response_deserializer=remote__pb2.Dump.FromString,
        )
    self.rpc_XGBoosterGetModelRaw = channel.unary_unary(
        '/remote.Remote/rpc_XGBoosterGetModelRaw',
        request_serializer=remote__pb2.ModelRawParams.SerializeToString,
        response_deserializer=remote__pb2.Dump.FromString,
        )
    self.rpc_XGDMatrixNumCol = channel.unary_unary(
        '/remote.Remote/rpc_XGDMatrixNumCol',
        request_serializer=remote__pb2.Name.SerializeToString,
        response_deserializer=remote__pb2.Integer.FromString,
        )
    self.rpc_XGDMatrixNumRow = channel.unary_unary(
        '/remote.Remote/rpc_XGDMatrixNumRow',
        request_serializer=remote__pb2.Name.SerializeToString,
        response_deserializer=remote__pb2.Integer.FromString,
        )


class RemoteServicer(object):
  """Interface exported by the server.
  """

  def rpc_get_remote_report_with_pubkey(self, request, context):
    """Get attestation report
    Status is a just a dummy argument and won't be used by the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_add_client_key(self, request, context):
    """Send symmetric key encrypted with enclave public key, signature
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_add_client_key_with_certificate(self, request, context):
    """Send symmetric key encrypted with enclave public key, signature, certificate
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGDMatrixCreateFromEncryptedFile(self, request, context):
    """Send params of a DMatrix to the server for initialization
    Returns the name assigned to this DMatrix
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterCreate(self, request, context):
    """Send params of a Booster to the server for initialization 
    Returns the name assigned to this booster
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterSetParam(self, request, context):
    """Set booster parameters
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterUpdateOneIter(self, request, context):
    """Update the booster for one round
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterPredict(self, request, context):
    """Run predictions
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterSaveModel(self, request, context):
    """Save model to a file on the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterLoadModel(self, request, context):
    """Load model from file on the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterDumpModelEx(self, request, context):
    """Dump model 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterDumpModelExWithFeatures(self, request, context):
    """Dump model with features
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGBoosterGetModelRaw(self, request, context):
    """Save model to buffer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGDMatrixNumCol(self, request, context):
    """Get number of columns in the DMatrix
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rpc_XGDMatrixNumRow(self, request, context):
    """Get number of rows in the DMatrix
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RemoteServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'rpc_get_remote_report_with_pubkey': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_get_remote_report_with_pubkey,
          request_deserializer=remote__pb2.Status.FromString,
          response_serializer=remote__pb2.Report.SerializeToString,
      ),
      'rpc_add_client_key': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_add_client_key,
          request_deserializer=remote__pb2.DataMetadata.FromString,
          response_serializer=remote__pb2.StatusMsg.SerializeToString,
      ),
      'rpc_add_client_key_with_certificate': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_add_client_key_with_certificate,
          request_deserializer=remote__pb2.DataMetadata.FromString,
          response_serializer=remote__pb2.StatusMsg.SerializeToString,
      ),
      'rpc_XGDMatrixCreateFromEncryptedFile': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGDMatrixCreateFromEncryptedFile,
          request_deserializer=remote__pb2.DMatrixAttrs.FromString,
          response_serializer=remote__pb2.Name.SerializeToString,
      ),
      'rpc_XGBoosterCreate': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterCreate,
          request_deserializer=remote__pb2.BoosterAttrs.FromString,
          response_serializer=remote__pb2.Name.SerializeToString,
      ),
      'rpc_XGBoosterSetParam': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterSetParam,
          request_deserializer=remote__pb2.BoosterParam.FromString,
          response_serializer=remote__pb2.StatusMsg.SerializeToString,
      ),
      'rpc_XGBoosterUpdateOneIter': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterUpdateOneIter,
          request_deserializer=remote__pb2.BoosterUpdateParams.FromString,
          response_serializer=remote__pb2.StatusMsg.SerializeToString,
      ),
      'rpc_XGBoosterPredict': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterPredict,
          request_deserializer=remote__pb2.PredictParams.FromString,
          response_serializer=remote__pb2.Predictions.SerializeToString,
      ),
      'rpc_XGBoosterSaveModel': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterSaveModel,
          request_deserializer=remote__pb2.SaveModelParams.FromString,
          response_serializer=remote__pb2.StatusMsg.SerializeToString,
      ),
      'rpc_XGBoosterLoadModel': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterLoadModel,
          request_deserializer=remote__pb2.LoadModelParams.FromString,
          response_serializer=remote__pb2.StatusMsg.SerializeToString,
      ),
      'rpc_XGBoosterDumpModelEx': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterDumpModelEx,
          request_deserializer=remote__pb2.DumpModelParams.FromString,
          response_serializer=remote__pb2.Dump.SerializeToString,
      ),
      'rpc_XGBoosterDumpModelExWithFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterDumpModelExWithFeatures,
          request_deserializer=remote__pb2.DumpModelWithFeaturesParams.FromString,
          response_serializer=remote__pb2.Dump.SerializeToString,
      ),
      'rpc_XGBoosterGetModelRaw': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGBoosterGetModelRaw,
          request_deserializer=remote__pb2.ModelRawParams.FromString,
          response_serializer=remote__pb2.Dump.SerializeToString,
      ),
      'rpc_XGDMatrixNumCol': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGDMatrixNumCol,
          request_deserializer=remote__pb2.Name.FromString,
          response_serializer=remote__pb2.Integer.SerializeToString,
      ),
      'rpc_XGDMatrixNumRow': grpc.unary_unary_rpc_method_handler(
          servicer.rpc_XGDMatrixNumRow,
          request_deserializer=remote__pb2.Name.FromString,
          response_serializer=remote__pb2.Integer.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'remote.Remote', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
